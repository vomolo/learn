rot13
Instructions

Write a program that takes a string and displays it, replacing each of its letters by the letter 13 spots ahead in alphabetical order.

    'z' becomes 'm' and 'Z' becomes 'M'. The case of the letter stays the same.

    The output will be followed by a newline ('\n').

    If the number of arguments is different from 1, the program displays nothing.

Usage

$ go run . "abc"
nop
$ go run . "hello there"
uryyb gurer
$ go run . "HELLO, HELP"
URYYB, URYC
$ go run .
$




package piscine
func rot14(c rune) rune {
	if c >= 'A' && c < 'M' || c >= 'a' && c < 'm' {
		return c + 14
	}
	if c >= 'M' && c <= 'Z' || c >= 'm' && c <= 'z' {
		return c - 12
	}
	return c
}
func Rot14(str string) string {
	result := ""
	for _, re := range str {
		result += string(rot14(re))
	}
	return result
}

func main() {
	if len(os.Args) == 2 {
		for _, r := range os.Args[1] {
			if r >= 'a' && r <= 'z' {
				if r >= 'a'+13 {
					r -= 13
				} else {
					r += 13
				}
			} else if r >= 'A' && r <= 'Z' {
				if r >= 'A'+13 {
					r -= 13
				} else {
					r += 13
				}
			}
			fmt.Printf("%c", r)
		}
		fmt.Println()
	}
}
